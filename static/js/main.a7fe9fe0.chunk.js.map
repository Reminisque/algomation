{"version":3,"sources":["ui/CodeBox.module.css","ui/TwoBarBurgerIcon.module.css","ui/Button.module.css","ui/Header.module.css","ui/Menu.module.css","ui/MenuItem.module.css","App.module.css","logo.svg","ui/Button.js","ui/CodeBox.js","ui/Header.js","ui/Menu.js","ui/MenuItem.js","ui/TwoBarBurgerIcon.js","algorithms/sorting/sorting.js","algorithms/sorting/bubbleSort.js","algorithms/sorting/insertionSort.js","algorithms/sorting/mergeSort.js","algorithms/sorting/selectionSort.js","algorithms/graph/djikstra.js","algorithms/graph/graph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","className","onClick","styles","root","join","children","CodeBox","highlightColor","code","map","lineNum","key","line","highlightSet","has","style","background","Header","Menu","MenuItem","Fragment","TwoBarBurgerIcon","bar","sorting","this","BAR_LENGTH","visualRef","d3","current","selectAll","remove","append","array","barLength","div","select","data","exit","transition","duration","enter","d","text","bubbleSort","name","category","pseudocode","next","i","state","renderEnterExit","renderUpdate","backtrack","unsorted","Array","Math","floor","random","codeHighlights","Set","push","length","swapped","curr","insertionSort","previous","sortedTo","start","prev","mergeSort","attr","mainArray","altArray","ref","main","alt","merge","left","mid","right","leftHalf","slice","rightHalf","merged","k","unshift","shift","pop","selectionSort","minimum","min","djikstra","nodes","links","linkQueue","linkVisited","svg","node","link","LINK_COLOR","force","alpha","restart","generateGraph","queue","end","endReached","bestCost","forEach","n","Infinity","visited","l","target","cost","add","prevLink","delete","sort","a","b","NODE_AMOUNT","NODE_RADIUS","MAX_COST","MAIN_COLOR","strength","getBoundingClientRect","width","height","distance","on","ticked","window","linkText","nodeAmount","maxCost","unique","linkAmount","initialLink","source","dest","linkTo","linkFrom","newLink","x","y","angle","atan","PI","App","algoMenu","title","algorithms","toggleOpenAlgoMenu","setState","openAlgoMenu","algorithm","restOfProps","React","createRef","playbackSpeed","playing","bind","clearBacktrack","backtrackTo","nextBacktrackState","prevBacktrackState","play","pause","togglePlayback","runAlgorithm","index","renderVisual","clearInterval","playback","setInterval","initialRender","run","menuOpened","open","header","brand","algoMenuBtn","content","algoMenuFlex","group","algoMenuGroup","algoMenuGroupTitle","algoMenuItem","setAlgorithm","visualPane","visual","controlPane","algoInfo","algoName","controls","type","max","step","value","onChange","e","parseInt","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a7fe9fe0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CodeBox_root__2NKxj\",\"line\":\"CodeBox_line__hvUvC\",\"lineNum\":\"CodeBox_lineNum__1lIe-\",\"code\":\"CodeBox_code__3mISS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TwoBarBurgerIcon_root__Lnj4A\",\"bar\":\"TwoBarBurgerIcon_bar__rBxBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2E4R1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__1UtyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__1Kawh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MenuItem_root__1X2TJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__28haJ\",\"header\":\"App_header__3We9Q\",\"brand\":\"App_brand__1XbJC\",\"content\":\"App_content__WVazy\",\"algoMenu\":\"App_algoMenu__OvcSb\",\"open\":\"App_open__1gc8Q\",\"algoMenuBtn\":\"App_algoMenuBtn__3tvlw\",\"algoMenuFlex\":\"App_algoMenuFlex__1eu8S\",\"algoMenuGroup\":\"App_algoMenuGroup__2vUmH\",\"algoMenuGroupTitle\":\"App_algoMenuGroupTitle__j97lu\",\"algoMenuItem\":\"App_algoMenuItem__10WBy\",\"visualPane\":\"App_visualPane__1ShOm\",\"visual\":\"App_visual__3fzAa\",\"controlPane\":\"App_controlPane__2The-\",\"algoInfo\":\"App_algoInfo__1_Ovt\",\"category\":\"App_category__Ak32d\",\"algoName\":\"App_algoName__2Yn8y\",\"controls\":\"App_controls__t0KXj\",\"pseudocode\":\"App_pseudocode__1BIPb\",\"playback\":\"App_playback__1JtR2\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nfunction Button(props) {\r\n  const { className, onClick } = props;\r\n\r\n  return (\r\n    <button className={[styles.root, className].join(' ')} onClick={onClick}>\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { Button };","import React from 'react';\r\nimport styles from './CodeBox.module.css';\r\n\r\nfunction CodeBox(props) {\r\n  const highlightColor = props.highlightColor || 'rgba(184, 163, 163, 0.75)';\r\n\r\n  return (\r\n    <div className={[styles.root, props.className].join(' ')}>\r\n      {props.code.map((code, lineNum) =>\r\n        <div key={lineNum} className={styles.line}>\r\n          <div className={styles.lineNum}>{lineNum + 1}</div>\r\n          {props.highlightSet?.has(lineNum + 1)\r\n            ? <code className={styles.code} style={{ background: highlightColor }}>{code}</code>\r\n            : <code className={styles.code}>{code}</code>\r\n          }\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { CodeBox };","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header {...props} className={[styles.root, props.className].join(' ')}>\r\n      {props.children}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport { Header };","import React from 'react';\r\nimport styles from './Menu.module.css';\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <ul {...props} className={[styles.root, props.className].join(' ')} >\r\n      {props.children}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport { Menu };","import React from 'react';\r\nimport styles from './MenuItem.module.css';\r\n\r\nfunction MenuItem(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <li {...props} className={[styles.root, props.className].join(' ')}>\r\n        {props.children}\r\n      </li>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport { MenuItem };","import React from 'react';\r\nimport styles from './TwoBarBurgerIcon.module.css';\r\n\r\nfunction TwoBarBurgerIcon(props) {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.bar}></div>\r\n      <div className={styles.bar}></div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport { TwoBarBurgerIcon };","import * as d3 from 'd3';\r\n\r\nclass sorting {\r\n  constructor() {\r\n    this.BAR_LENGTH = 20;\r\n  }\r\n\r\n  initialRender(visualRef) {\r\n    d3.select(visualRef.current).selectAll('*').remove();\r\n    d3.select(visualRef.current)\r\n      .append('div')\r\n      .style('position', 'relative')\r\n      .style('top', '50%')\r\n      .style('display', 'flex')\r\n      .style('flex-direction', 'row')\r\n      .style('justify-content', 'center');\r\n  }\r\n\r\n  renderEnterExit(visualRef, array, barLength) {\r\n    let ref = d3.select(visualRef.current).select('div');\r\n    let div = ref.selectAll('div').data(array ? array : []);\r\n\r\n    div.exit()\r\n      .transition()\r\n      .duration(500)\r\n      .style('opacity', 0)\r\n      .remove();\r\n\r\n    div.enter()\r\n      .append('div')\r\n      .style('width', '32px')\r\n      .style('height', (d) => `${barLength + d * 1.5}px`)\r\n      .style('padding', '8px')\r\n      .style('border', '1px solid')\r\n      .style('text-align', 'center')\r\n      .text((d) => d);\r\n  }\r\n}\r\nexport default sorting;","import * as d3 from 'd3';\r\nimport sorting from './sorting';\r\n\r\nclass bubbleSort extends sorting {\r\n  constructor() {\r\n    super();\r\n\r\n    this.name = 'Bubble Sort';\r\n    this.category = 'Sorting Algorithm';\r\n    this.pseudocode = [\r\n      'for i from 0 to (numOfElements - 1)',\r\n      '  traverse up to last i elements',\r\n      '    if ith element > i+1th element',\r\n      '      swap their positions',\r\n      '      remember swap is made',\r\n      '  stop early if no swaps made'\r\n    ];\r\n  }\r\n\r\n  renderUpdate(visualRef, array, current, next) {\r\n    let div = d3\r\n      .select(visualRef.current)\r\n      .select('div')\r\n      .selectAll('div')\r\n      .data(array ? array : []);\r\n\r\n    div\r\n      .text((d) => d);\r\n\r\n    div\r\n      .transition()\r\n      .duration(150)\r\n      .style('height', (d) => `${this.BAR_LENGTH + d * 1.5}px`)\r\n      .style('background', (d, i) => {\r\n        if (i === current)\r\n          return 'indianred';\r\n        else if (i === next)\r\n          return 'mediumorchid';\r\n        return 'transparent';\r\n      });\r\n  }\r\n\r\n  renderVisual(visualRef, state) {\r\n    const { array, current, next } = state;\r\n\r\n    this.renderEnterExit(visualRef, array, this.BAR_LENGTH);\r\n    this.renderUpdate(visualRef, array, current, next);\r\n  }\r\n\r\n  run(backtrack) {\r\n    let unsorted = [...Array(20)].map(() => Math.floor(Math.random() * 101));\r\n    let state = {\r\n      array: [],\r\n      current: -1,\r\n      next: -1,\r\n      codeHighlights: new Set()\r\n    };\r\n\r\n    state.array = [...unsorted];\r\n    backtrack.push(state);\r\n\r\n    for (let i = 0; i < unsorted.length; i++) {\r\n      let swapped = false;\r\n      for(let curr = 0; curr < unsorted.length - 1 - i; curr++) {\r\n        let next = curr + 1;\r\n        state = {\r\n          ...state,\r\n          current: curr,\r\n          next: -1,\r\n          codeHighlights: new Set([1, 2])\r\n        };\r\n        backtrack.push(state);\r\n        if (unsorted[curr] > unsorted[next]) {\r\n          state = {\r\n            ...state,\r\n            next: next,\r\n            codeHighlights: new Set([1, 2, 3])\r\n          };\r\n          backtrack.push(state);\r\n          [unsorted[curr], unsorted[next]] = [unsorted[next], unsorted[curr]];\r\n          swapped = true;\r\n          state = {\r\n            ...state,\r\n            array: [...unsorted],\r\n            current: next,\r\n            next: curr,\r\n            codeHighlights: new Set([1, 2, 3, 4, 5])\r\n          };\r\n          backtrack.push(state);\r\n        }\r\n      }\r\n      if (!swapped) {\r\n        state = {\r\n          ...state,\r\n          codeHighlights: new Set([1, 6])\r\n        }\r\n        backtrack.push(state);\r\n        break;\r\n      }\r\n    }\r\n    state = {\r\n      ...state,\r\n      current: -1,\r\n      next: -1,\r\n      codeHighlights: new Set()\r\n    };\r\n    backtrack.push(state);\r\n  }\r\n}\r\n\r\nexport default bubbleSort;","import * as d3 from 'd3';\r\nimport sorting from './sorting';\r\n\r\nclass insertionSort extends sorting {\r\n  constructor() {\r\n    super();\r\n\r\n    this.name = 'Insertion Sort';\r\n    this.category = 'Sorting Algorithm';\r\n    this.pseudocode = [\r\n      'traverse from index 1 to len(arr) - 1',\r\n      '  save current position',\r\n      '  while previous element exists and is larger than current element',\r\n      '    swap positions of current and previous element',\r\n      '    save new position of current as current position',\r\n    ];\r\n  }\r\n\r\n  renderUpdate(visualRef, array, current, previous) {\r\n    let div = d3\r\n      .select(visualRef.current)\r\n      .select('div')\r\n      .selectAll('div')\r\n      .data(array ? array : []);\r\n\r\n    div\r\n      .text((d) => d);\r\n\r\n    div\r\n      .transition()\r\n      .duration(150)\r\n      .style('height', (d) => `${this.BAR_LENGTH + d * 1.5}px`)\r\n      .style('background', (d, i) => {\r\n        if (i === current)\r\n          return 'indianred';\r\n        else if (i === previous)\r\n          return 'mediumorchid';\r\n        return 'transparent';\r\n      });\r\n  }\r\n\r\n  renderVisual(visualRef, state) {\r\n    const { array, current, previous} = state;\r\n\r\n    this.renderEnterExit(visualRef, array, this.BAR_LENGTH);\r\n    this.renderUpdate(visualRef, array, current, previous);\r\n  }\r\n\r\n  run(backtrack) {\r\n    let unsorted = [...Array(20)].map(() => Math.floor(Math.random() * 101));\r\n    let state = {\r\n      array: [],\r\n      current: -1,\r\n      previous: -1,\r\n      sortedTo: -1,\r\n      codeHighlights: new Set()\r\n    };\r\n\r\n    state.array = [...unsorted];\r\n    backtrack.push(state);\r\n\r\n    for (let start = 1; start < unsorted.length; start++) {\r\n      let curr = start;\r\n      state = {\r\n        ...state,\r\n        current: curr,\r\n        codeHighlights: new Set([1, 2])\r\n      };\r\n      backtrack.push(state);\r\n      while (curr > 0 && unsorted[curr - 1] > unsorted[curr]) {\r\n        let prev = curr - 1;\r\n        state = {\r\n          ...state,\r\n          previous: prev,\r\n          codeHighlights: new Set([1, 3])\r\n        };\r\n        backtrack.push(state);\r\n        [unsorted[prev], unsorted[curr]] = [unsorted[curr], unsorted[prev]];\r\n        state = {\r\n          ...state,\r\n          array: [...unsorted],\r\n          current: prev,\r\n          previous: curr,\r\n          codeHighlights: new Set([1, 3, 4])\r\n        };\r\n        backtrack.push(state);\r\n        curr = prev;\r\n        state = {\r\n          ...state,\r\n          previous: -1,\r\n          codeHighlights: new Set([1, 3, 5])\r\n        };\r\n        backtrack.push(state);\r\n      }\r\n    }\r\n    state = {\r\n      ...state,\r\n      current: -1,\r\n      previous: -1,\r\n      sortedTo: unsorted.length - 1,\r\n      codeHighlights: new Set()\r\n    };\r\n    backtrack.push(state);\r\n  }\r\n}\r\n\r\nexport default insertionSort;","import * as d3 from 'd3';\r\nimport sorting from './sorting';\r\n\r\nclass mergeSort extends sorting {\r\n  constructor() {\r\n    super();\r\n\r\n    this.name = 'Merge Sort';\r\n    this.category = 'Sorting Algorithm';\r\n    this.pseudocode = [\r\n      'split array into halves',\r\n      'merge sort on left half',\r\n      'merge sort on right half',\r\n      'merge two halves together in order',\r\n      '  while left and right halves have elements',\r\n      '    move least element to result array',\r\n      '  while left half still has elements',\r\n      '    move least element to result array',\r\n      '  while right half still has elements',\r\n      '    move least element to result array',\r\n      'update original array'\r\n    ];\r\n  }\r\n\r\n  initialRender(visualRef) {\r\n    d3.select(visualRef.current).selectAll('*').remove();\r\n\r\n    let div = d3.select(visualRef.current)\r\n      .append('div')\r\n      .style('position', 'relative')\r\n      .style('height', '100%')\r\n      .style('display', 'flex')\r\n      .style('gap', '40px')\r\n      .style('flex-direction', 'column')\r\n      .style('justify-content', 'center');\r\n\r\n    div\r\n      .append('div')\r\n      .attr('id', 'main')\r\n      .style('height', '200px')\r\n      .style('display', 'flex')\r\n      .style('gap', '1px')\r\n      .style('flex-direction', 'row')\r\n      .style('justify-content', 'center');\r\n\r\n    div\r\n      .append('div')\r\n      .attr('id', 'alt')\r\n      .style('height', '200px')\r\n      .style('display', 'flex')\r\n      .style('flex-direction', 'row')\r\n      .style('justify-content', 'center');\r\n  }\r\n\r\n  renderEnterExit(visualRef, mainArray, altArray, barLength) {\r\n    let ref = d3.select(visualRef.current);\r\n    let main = ref.select('#main').selectAll('div').data(mainArray ? mainArray : []);\r\n    let alt = ref.select('#alt').selectAll('div').data(altArray ? altArray : []);\r\n\r\n    main.exit()\r\n      .transition()\r\n      .duration(500)\r\n      .style('opacity', 0)\r\n      .remove();\r\n\r\n    main.enter()\r\n      .append('div')\r\n      .style('width', '32px')\r\n      .style('height', (d) => `${barLength + d * 1.5}px`)\r\n      .style('padding', '8px')\r\n      .style('border', '1px solid')\r\n      .style('text-align', 'center')\r\n      .text((d) => d);\r\n\r\n    alt.exit()\r\n      .transition()\r\n      .duration(100)\r\n      .style('height', '0px')\r\n      .duration(150)\r\n      .style('opacity', 0)\r\n      .remove();\r\n\r\n    alt.enter()\r\n      .append('div')\r\n      .merge(alt)\r\n      .style('width', '32px')\r\n      .style('height', (d) => `${barLength + d * 1.5}px`)\r\n      .style('padding', '8px')\r\n      .style('border', '1px solid')\r\n      .style('text-align', 'center')\r\n      .text((d) => d);\r\n  }\r\n\r\n  renderUpdate(visualRef, mainArray, altArray, left, mid, right) {\r\n    let ref = d3.select(visualRef.current);\r\n    let main = ref.select('#main').selectAll('div').data(mainArray ? mainArray : []);\r\n    let alt = ref.select('#alt').selectAll('div').data(altArray ? altArray : []);\r\n\r\n    main\r\n      .text((d) => d);\r\n\r\n    alt\r\n      .text((d) => d);\r\n\r\n    main\r\n      .transition()\r\n      .duration(150)\r\n      .style('height', (d) => {\r\n        return d === null ? '0px' : `${this.BAR_LENGTH + d * 1.5}px`\r\n      })\r\n      .style('background', (d, i) => {\r\n        if (left <= i && i < mid)\r\n          return 'indianred';\r\n        else if (mid <= i && i < right)\r\n          return 'mediumorchid';\r\n        return 'transparent';\r\n      });\r\n\r\n    alt\r\n      .transition()\r\n      .duration(150)\r\n      .style('height', (d) => `${this.BAR_LENGTH + d * 1.5}px`);      \r\n  }\r\n\r\n  renderVisual(visualRef, state) {\r\n    const { mainArray, altArray, left, mid, right} = state;\r\n    \r\n    this.renderEnterExit(visualRef, mainArray, altArray, this.BAR_LENGTH);\r\n    this.renderUpdate(visualRef, mainArray, altArray, left, mid, right)\r\n  }\r\n\r\n  run(backtrack) {\r\n    let unsorted = [...Array(20)].map(() => Math.floor(Math.random() * 101));\r\n    let state = {\r\n      mainArray: [],\r\n      altArray: [],\r\n      codeHighlights: new Set()\r\n    };\r\n    \r\n    function mergeSort(left, right) {\r\n      if (right - left > 1) {\r\n        let mid = Math.floor(left + (right - left) / 2);\r\n\r\n        state = {\r\n          ...state,\r\n          left: left,\r\n          mid: mid,\r\n          right: mid,\r\n          codeHighlights: new Set([1, 2])\r\n        }\r\n        backtrack.push(state);\r\n        mergeSort(left, mid);\r\n        \r\n        state = {\r\n          ...state,\r\n          left: mid,\r\n          mid: mid,\r\n          right: right,\r\n          codeHighlights: new Set([1, 3])\r\n        }\r\n        backtrack.push(state);\r\n        mergeSort(mid, right);\r\n\r\n        state = {\r\n          ...state,\r\n          left: left,\r\n          mid: mid,\r\n          right: right,\r\n          codeHighlights: new Set([4]) \r\n        };\r\n        backtrack.push(state);\r\n        \r\n\r\n        let leftHalf = unsorted.slice(left, mid);\r\n        let rightHalf = unsorted.slice(mid, right);\r\n        let merged = [];\r\n        let k = left;\r\n\r\n        while (leftHalf.length > 0 && rightHalf.length > 0) {\r\n          if (leftHalf[0] < rightHalf[0]) {\r\n            merged.unshift(leftHalf.shift());\r\n            unsorted[left++] = null;\r\n          } else {\r\n            merged.unshift(rightHalf.shift());\r\n            unsorted[mid++] = null;\r\n          }\r\n          state = {\r\n            ...state,\r\n            mainArray: [...unsorted],\r\n            altArray: [...merged],\r\n            codeHighlights: new Set([4, 5, 6])\r\n          };\r\n          backtrack.push(state);\r\n        }\r\n\r\n        while (leftHalf.length > 0) {\r\n          merged.unshift(leftHalf.shift());\r\n          unsorted[left++] = null;\r\n          state = {\r\n            ...state,\r\n            mainArray: [...unsorted],\r\n            altArray: [...merged],\r\n            codeHighlights: new Set([4, 7, 8])\r\n          };\r\n          backtrack.push(state);\r\n        }\r\n\r\n        while (rightHalf.length > 0) {\r\n          merged.unshift(rightHalf.shift());\r\n          unsorted[mid++] = null;\r\n          state = {\r\n            ...state,\r\n            mainArray: [...unsorted],\r\n            altArray: [...merged],\r\n            codeHighlights: new Set([4, 9, 10])\r\n          };\r\n          backtrack.push(state);\r\n        }\r\n\r\n        while (merged.length > 0) {\r\n          unsorted[k++] = merged.pop();\r\n          state = {\r\n            ...state,\r\n            mainArray: [...unsorted],\r\n            altArray: [...merged],\r\n            codeHighlights: new Set([11]) \r\n          };\r\n          backtrack.push(state);\r\n        }\r\n      }\r\n    }\r\n\r\n    state.mainArray = [...unsorted];\r\n    backtrack.push(state);\r\n\r\n    mergeSort(0, unsorted.length);\r\n\r\n    state = {\r\n      ...state,\r\n      left: 0,\r\n      mid: 0,\r\n      right: 0,\r\n      codeHighlights: new Set()\r\n    };\r\n    backtrack.push(state);\r\n  }\r\n}\r\n\r\nexport default mergeSort;","import * as d3 from 'd3';\r\nimport sorting from './sorting';\r\n\r\nclass selectionSort extends sorting {\r\n  constructor() {\r\n    super();\r\n\r\n    this.name = 'Selection Sort';\r\n    this.category = 'Sorting Algorithm';\r\n    this.pseudocode = [\r\n      'for (numOfElements - 1) times',\r\n      '  set first element of unsorted as the minimum',\r\n      '  for each unsorted element',\r\n      '    if element < currentMinimum',\r\n      '      set element as new minimum',\r\n      '  swap positions of minimum and first unsorted element'\r\n    ];\r\n  }\r\n\r\n  renderUpdate(visualRef, array, minimum, current) {\r\n    let div = d3\r\n      .select(visualRef.current)\r\n      .select('div')\r\n      .selectAll('div')\r\n      .data(array ? array : []);\r\n\r\n    div\r\n      .text((d) => d);\r\n\r\n    div\r\n      .transition()\r\n      .duration(150)\r\n      .style('height', (d) => `${this.BAR_LENGTH + d * 1.5}px`)\r\n      .style('background', (d, i) => {\r\n        if (i === minimum)\r\n          return 'indianred';\r\n        else if (i === current)\r\n          return 'mediumorchid';\r\n        return 'transparent';\r\n      });\r\n  }\r\n\r\n  renderVisual(visualRef, state) {\r\n    const { array, minimum, current } = state;\r\n\r\n    this.renderEnterExit(visualRef, array, this.BAR_LENGTH);\r\n    this.renderUpdate(visualRef, array, minimum, current);\r\n  }\r\n\r\n  run(backtrack) {\r\n    let unsorted = [...Array(20)].map(() => Math.floor(Math.random() * 101));\r\n    let state = {\r\n      array: [],\r\n      start: -1,\r\n      minimum: -1,\r\n      current: -1,\r\n      sortedTo: -1,\r\n      codeHighlights: new Set()\r\n    };\r\n\r\n    state.array = [...unsorted];\r\n    backtrack.push(state);\r\n\r\n    for (let start = 0; start < unsorted.length - 1; start++) {\r\n      let min = start;\r\n      state = {\r\n        ...state,\r\n        start: start,\r\n        minimum: min,\r\n        codeHighlights: new Set([1, 2])\r\n      };\r\n      backtrack.push(state);\r\n      for (let curr = start; curr < unsorted.length; curr++) {\r\n        state = {\r\n          ...state,\r\n          current: curr,\r\n          codeHighlights: new Set([1, 3, 4])\r\n        };\r\n        backtrack.push(state);\r\n        if (unsorted[curr] < unsorted[min]) {\r\n          min = curr;\r\n          state = {\r\n            ...state,\r\n            minimum: min,\r\n            codeHighlights: new Set([1, 3, 4, 5])\r\n          };\r\n          backtrack.push(state);\r\n        }\r\n      }\r\n      [unsorted[start], unsorted[min]] = [unsorted[min], unsorted[start]];\r\n      state = {\r\n        ...state,\r\n        array: [...unsorted],\r\n        sortedTo: start,\r\n        codeHighlights: new Set([1, 6])\r\n      };\r\n      backtrack.push(state);\r\n    }\r\n    state = {\r\n      ...state,\r\n      minimum: -1,\r\n      current: -1,\r\n      sortedTo: unsorted.length - 1,\r\n      codeHighlights: new Set()\r\n    };\r\n    backtrack.push(state);\r\n  }\r\n}\r\n\r\nexport default selectionSort;","import * as d3 from 'd3';\r\nimport graph from './graph';\r\n\r\nclass djikstra extends graph {\r\n  constructor() {\r\n    super();\r\n\r\n    this.name = 'Djikstra\\'s Algorithm';\r\n    this.category = 'Graph Algorithm';\r\n    this.pseudocode = [\r\n      'for each node n in graph',\r\n      '  set distance[n] to INFINITY',\r\n      'distance[src] = 0',\r\n      'add src to queue',\r\n      '',\r\n      'while queue is not empty',\r\n      '  n = node from queue with lowest distance',\r\n      '  remove n from queue',\r\n      '  for each neighbor of n',\r\n      '    alt = distance[n] + length(n, neighbor)',\r\n      '    if alt < distance[neighbor]',\r\n      '      distance[neighbor] = alt',\r\n      'when looking for shortest route from src to trgt',\r\n      '  end early after calculating trgt distance'\r\n    ];\r\n  }\r\n\r\n  renderUpdate(visualRef, nodes, links, current, linkQueue, linkVisited) {\r\n    let svg = d3.select(visualRef.current).select('svg');\r\n    let node = svg.selectAll('.node').data(nodes ? nodes : []);\r\n    let link = svg.selectAll('.link').data(links ? links : []);\r\n\r\n    node\r\n      .style('stroke', d => d === current ? 'rgba(120, 253, 231, 0.795)' : null)\r\n      .style('stroke-width', d => d === current ? 3 : 1);\r\n\r\n    link\r\n      .style('stroke', d => {\r\n        if (linkVisited.has(d)) {\r\n          return 'rgba(120, 253, 231, 0.795)';\r\n        } else if (linkQueue.has(d)) {\r\n          return 'rgba(255, 64, 64, 0.795)';\r\n        } else {\r\n          return this.LINK_COLOR;\r\n        }\r\n      });\r\n\r\n    this.force.nodes(nodes);\r\n    this.force.force('link').links(links);\r\n\r\n    return;\r\n  }\r\n\r\n  renderVisual(visualRef, state) {\r\n    const { nodes, links, current, linkQueue, linkVisited } = state;\r\n    this.renderEnterExit(visualRef, nodes, links);\r\n    this.renderUpdate(visualRef, nodes, links, current, linkQueue, linkVisited);\r\n    return;\r\n  }\r\n\r\n  run(backtrack) {\r\n    this.force.alpha(1).restart();\r\n\r\n    const { nodes, links } = this.generateGraph(12);\r\n    let queue = [nodes[0]];\r\n    let linkQueue = new Set();\r\n    let linkVisited = new Set();\r\n    let end = nodes.length - 1;\r\n    let endReached = false;\r\n    let state = {\r\n      nodes: nodes,\r\n      links: links,\r\n      current: null,\r\n      linkQueue: new Set(),\r\n      linkVisited: new Set(),\r\n      codeHighlights: new Set()\r\n    };\r\n    backtrack.push(state);\r\n\r\n    nodes[0].bestCost = 0;\r\n    nodes.forEach(n => {\r\n      if (n !== nodes[0]) {\r\n        n.bestCost = Infinity;\r\n        n.visited = false;\r\n      }\r\n    });\r\n\r\n    while (queue.length > 0) {\r\n      let current = queue.pop();\r\n\r\n      current.visited = true;\r\n      state = {\r\n        ...state,\r\n        current: current,\r\n        codeHighlights: new Set([6, 7, 8])\r\n      };\r\n      backtrack.push(state);\r\n\r\n      for (let l = 0; l < current.links.length; l++) {\r\n        let link = current.links[l];\r\n        let target = nodes[link.target];\r\n        let cost = current.bestCost + link.cost;\r\n\r\n        if (!linkQueue.has(link)) {\r\n          linkQueue.add(link)\r\n          state = {\r\n            ...state,\r\n            linkQueue: new Set(linkQueue),\r\n            codeHighlights: new Set([6, 9, 10])\r\n          };\r\n          backtrack.push(state);\r\n        }\r\n\r\n        if (!target.visited) {\r\n          queue.push(target);\r\n        }\r\n\r\n        if (cost < target.bestCost) {\r\n          target.bestCost = cost;\r\n          if (target.prevLink !== link) {\r\n            linkVisited.delete(target.prevLink);\r\n          }\r\n          target.prevLink = link;\r\n          linkVisited.add(link);\r\n          state = {\r\n            ...state,\r\n            linkVisited: new Set(linkVisited),\r\n            codeHighlights: new Set([6, 9, 11, 12])\r\n          };\r\n          backtrack.push(state);\r\n        }\r\n\r\n        if (target === nodes[end]) {\r\n          endReached = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (endReached) {\r\n        break;\r\n      }\r\n\r\n      queue.sort((a, b) => b.bestCost - a.bestCost);\r\n    }\r\n\r\n    if (endReached) {\r\n      state = {\r\n        ...state,\r\n        current: nodes[end],\r\n        codeHighlights: new Set([13, 14])\r\n      };\r\n    } else {\r\n      state = {\r\n        ...state,\r\n        current: null,\r\n        codeHighlights: new Set()\r\n      };\r\n    }\r\n\r\n    backtrack.push(state);\r\n  }\r\n}\r\n\r\nexport default djikstra;","import * as d3 from 'd3';\r\n\r\nclass graph {\r\n  constructor() {\r\n    this.NODE_AMOUNT = 10;\r\n    this.NODE_RADIUS = 12;\r\n    this.MAX_COST = 20;\r\n    this.MAIN_COLOR = 'rgb(202, 138, 138)';\r\n    this.LINK_COLOR = 'rgba(255, 255, 255, 0.4)';\r\n  }\r\n\r\n  initialRender(visualRef) {\r\n    d3.select(visualRef.current).selectAll('*').remove();\r\n\r\n    let svg = d3.select(visualRef.current)\r\n      .append('svg')\r\n      .attr('id', 'svg')\r\n      .style('width', '100%')\r\n      .style('height', '100%');\r\n\r\n    this.force = d3.forceSimulation()\r\n      .force('charge', d3.forceManyBody().strength(-800))\r\n      .force('xAxis', d3.forceX(() => d3.select('#svg').node().getBoundingClientRect().width / 2))\r\n      .force('yAxis', d3.forceY(() => d3.select('#svg').node().getBoundingClientRect().height / 2))\r\n      .force('link', d3.forceLink().distance(150))\r\n      .on('tick', () => this.ticked(visualRef));\r\n\r\n\r\n    d3.select(window)\r\n      .on('resize', () => {\r\n        this.force\r\n          .force('xAxis', d3.forceX(() => d3.select('#svg').node().getBoundingClientRect().width / 2))\r\n          .force('yAxis', d3.forceY(() => d3.select('#svg').node().getBoundingClientRect().height / 2))\r\n          .alpha(1)\r\n          .restart();\r\n      });\r\n  }\r\n\r\n  renderEnterExit(visualRef, nodes, links) {\r\n    let svg = d3.select(visualRef.current).select('svg');\r\n    let node = svg.selectAll('.node').data(nodes ? nodes : []);\r\n    let link = svg.selectAll('.link').data(links ? links : []);\r\n    let linkText = svg.selectAll('.linkText').data(links ? links : []);\r\n\r\n    let g = node.enter()\r\n      .append('g')\r\n      .attr('class', 'node')\r\n      .style('fill', this.MAIN_COLOR)\r\n\r\n    g\r\n      .append('circle')\r\n      .attr('r', this.NODE_RADIUS)\r\n      .style('fill', (d, i) => {\r\n        if (i === 0) {\r\n          return 'green';\r\n        } else if (i === nodes.length - 1) {\r\n          return 'indianred';\r\n        } else {\r\n          return '';\r\n        }\r\n      });\r\n\r\n    node.exit()\r\n      .remove();\r\n\r\n    link.enter()\r\n      .append('line')\r\n      .attr('class', 'link')\r\n      .style('stroke', this.LINK_COLOR)\r\n      .style('stroke-width', 2);\r\n\r\n    linkText.enter()\r\n      .append('text')\r\n      .attr('class', 'linkText')\r\n      .attr('dy', -4)\r\n      .style('fill', this.MAIN_COLOR);\r\n\r\n    link.exit()\r\n      .remove();\r\n\r\n    linkText.exit()\r\n      .remove();\r\n  }\r\n\r\n  generateGraph(nodeAmount = this.NODE_AMOUNT, maxCost = this.MAX_COST) {\r\n    let nodes = [];\r\n    let links = [];\r\n    let unique = new Set();\r\n\r\n    for (let node = 0; node < nodeAmount; node++) {\r\n      let n = { name: node, links: [] }\r\n      nodes.push(n);\r\n    }\r\n\r\n    for (let node = 0; node < nodeAmount - 1; node++) {\r\n      let linkAmount = Math.floor(Math.random() * 2) + 1;\r\n      let n = nodes[node];\r\n      let initialLink = { \r\n        source: node,\r\n        target: node + 1,\r\n        cost: Math.floor(Math.random() * maxCost) + 1\r\n      };\r\n\r\n      links.push(initialLink);\r\n      n.links.push(initialLink);\r\n\r\n      unique.add(`${node},${node + 1}`);\r\n      unique.add(`${node + 1},${node}`);\r\n\r\n      for (let link = 0; link < linkAmount; link++) {\r\n        let dest = Math.floor(Math.random() * (nodeAmount - 1 - node)) + node + 1;\r\n        let cost = Math.floor(Math.random() * maxCost) + 1;\r\n\r\n        while (dest === node) {\r\n          dest = Math.floor(Math.random() * (nodeAmount - 1 - node)) + node + 1;\r\n        }\r\n\r\n        const linkTo = `${dest},${node}`;\r\n        const linkFrom = `${node},${dest}`;\r\n\r\n        if (!unique.has(linkTo) && !unique.has(linkFrom)) {\r\n          let newLink = { source: node, target: dest, cost: cost };\r\n          unique.add(linkTo);\r\n          unique.add(linkFrom);\r\n          links.push(newLink)\r\n          n.links.push(newLink);\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      nodes: nodes,\r\n      links: links\r\n    };\r\n  }\r\n\r\n  ticked(visualRef) {\r\n    let svg = d3.select(visualRef.current).select('svg');\r\n    let node = svg.selectAll('.node');\r\n    let link = svg.selectAll('.link');\r\n    let linkText = svg.selectAll('.linkText');\r\n\r\n    node\r\n      .attr('transform', (d) => `translate(${d.x},${d.y})`);\r\n\r\n    link\r\n      .attr('x1', d => d.source.x)\r\n      .attr('y1', d => d.source.y)\r\n      .attr('x2', d => d.target.x)\r\n      .attr('y2', d => d.target.y);\r\n\r\n    linkText\r\n      .attr('transform', d => {\r\n        let x = (d.source.x + d.target.x) / 2;\r\n        let y = (d.source.y + d.target.y) / 2;\r\n        let angle = Math.atan((d.source.y - d.target.y) / (d.source.x - d.target.x)) * 180 / Math.PI;\r\n        return `translate(${x},${y}) rotate(${angle})`;\r\n      })\r\n      .text(d => d.cost);\r\n  }\r\n\r\n}\r\n\r\nexport default graph;","import React from 'react';\nimport * as d3 from 'd3';\nimport logo from './logo.svg';\nimport { Header, Button, CodeBox, Menu, MenuItem, TwoBarBurgerIcon } from './ui';\nimport { selectionSort, insertionSort, bubbleSort, mergeSort, djikstra } from './algorithms';\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      openAlgoMenu: true,\n      algorithm: null,\n      current: -1,\n      codeHighlights: new Set(),\n      restOfProps: {}\n    };\n\n    this.highlightColor = 'rgba(134, 87, 87, 0.5)';\n    this.visualRef = React.createRef();\n    this.backtrack = [];\n    this.playbackSpeed = 166;\n    this.playing = false;\n\n\n    this.toggleOpenAlgoMenu = this.toggleOpenAlgoMenu.bind(this);\n    this.clearBacktrack = this.clearBacktrack.bind(this);\n    this.backtrackTo = this.backtrackTo.bind(this);\n    this.nextBacktrackState = this.nextBacktrackState.bind(this);\n    this.prevBacktrackState = this.prevBacktrackState.bind(this);\n    this.play = this.play.bind(this);\n    this.pause = this.pause.bind(this);\n    this.togglePlayback = this.togglePlayback.bind(this);\n    this.runAlgorithm = this.runAlgorithm.bind(this);\n  }\n\n  algoMenu = [\n    {\n      title: 'Sorting',\n      algorithms: [\n        'Selection Sort',\n        'Insertion Sort',\n        'Bubble Sort',\n        'Merge Sort'\n      ]\n    },\n    {\n      title: 'Graph',\n      algorithms: [\n        'Djikstra\\'s Algorithm'\n      ]\n    },\n  ];\n\n  toggleOpenAlgoMenu = () => {\n    this.setState({ openAlgoMenu: !this.state.openAlgoMenu });\n  }\n  \n  clearBacktrack() {\n    this.backtrack = [];\n  }\n\n  backtrackTo(index) {\n    if (0 <= index && index < this.backtrack.length) {\n      const { codeHighlights, ...restOfProps } = this.backtrack[index];\n      this.state.algorithm.renderVisual(this.visualRef, restOfProps);\n      this.setState({\n        current: index,\n        codeHighlights: codeHighlights,\n        restOfProps: restOfProps\n      });\n    }\n  }\n\n  nextBacktrackState() {\n    this.backtrackTo(this.state.current + 1);\n  }\n\n  prevBacktrackState() {\n    this.backtrackTo(this.state.current - 1);\n  }\n\n  play() {\n    clearInterval(this.playback);\n    this.playback = setInterval(() => {\n      if (0 <= this.state.current && this.state.current < this.backtrack.length - 1) {\n        this.nextBacktrackState();\n        this.playing = true;\n      } else {\n        this.pause();\n      }\n    }, this.playbackSpeed);\n  }\n\n  pause() {\n    clearInterval(this.playback);\n    this.playing = false;\n  }\n\n  togglePlayback() {\n    if (this.playing) {\n      this.pause();\n    } else {\n      this.play()\n    }\n  }\n\n  setAlgorithm(name) {\n    let algorithm = null;\n\n    d3.select(window).on('resize', null);\n    this.clearBacktrack();\n\n    switch (name) {\n      case 'Selection Sort':\n        algorithm = new selectionSort();\n        break;\n      case 'Insertion Sort':\n        algorithm = new insertionSort();\n        break;\n      case 'Bubble Sort':\n        algorithm = new bubbleSort();\n        break;\n      case 'Merge Sort':\n        algorithm = new mergeSort();\n        break;\n      case 'Djikstra\\'s Algorithm':\n        algorithm = new djikstra();\n        break;\n      default:\n        break;\n    }\n\n    this.setState(\n      {algorithm: algorithm, openAlgoMenu: false},\n      () => {\n        if (this.state.algorithm) {\n          this.state.algorithm.initialRender(this.visualRef);\n          this.runAlgorithm();\n        }\n      }\n    );\n  }\n\n  runAlgorithm() {\n    this.clearBacktrack();\n\n    if (this.state.algorithm) {\n      this.state.algorithm.run(this.backtrack)\n    }\n    this.backtrackTo(0);\n  }\n\n  render() {\n    const menuOpened = this.state.openAlgoMenu ? styles.open : \"\";\n    return (\n      <div className={styles.root}>\n        <Header className={styles.header}>\n          <div className={styles.brand}>\n            Algomation\n          </div>\n          <Button className={styles.algoMenuBtn} onClick={this.toggleOpenAlgoMenu}>\n            <TwoBarBurgerIcon></TwoBarBurgerIcon>\n          </Button>\n        </Header>\n        <div className={styles.content}>\n          <div className={[styles.algoMenu, menuOpened].join(' ')}>\n            <div className={styles.algoMenuFlex}>\n              {this.algoMenu.map((group) =>\n                <Menu key={group.title} className={styles.algoMenuGroup}>\n                  <MenuItem className={styles.algoMenuGroupTitle}>{group.title} </MenuItem>\n                  {group.algorithms.map((algorithm) =>\n                    <MenuItem \n                      key={algorithm} \n                      className={styles.algoMenuItem} \n                      onClick={() => this.setAlgorithm(algorithm)}\n                    >\n                      {algorithm}\n                    </MenuItem>\n                  )}\n                </Menu>\n              )}\n            </div>\n          </div>\n          <div className={styles.visualPane}>\n            <div className={styles.visual} ref={this.visualRef}></div>\n          </div>\n          <div className={styles.controlPane}>\n            <div className={styles.algoInfo}>\n              <div className={styles.category}>{this.state.algorithm?.category}</div>\n              <div className={styles.algoName}>{this.state.algorithm?.name}</div>\n              <CodeBox\n                className={styles.pseudocode}\n                code={this.state.algorithm?.pseudocode ?? []}\n                highlightColor={this.highlightColor}\n                highlightSet={this.state.codeHighlights}\n              ></CodeBox>\n            </div>\n            <div className={styles.controls}>\n              <div>\n                <input\n                  className={styles.playback}\n                  type=\"range\"\n                  min=\"0\"\n                  max={this.backtrack.length - 1}\n                  step=\"1\"\n                  value={this.state.current}\n                  onChange={(e) => this.backtrackTo(parseInt(e.target.value))}\n                ></input>\n              </div>\n              <Button onClick={() => this.runAlgorithm()}>RUN</Button>\n              <Button onClick={this.prevBacktrackState}>Previous State</Button>\n              <Button onClick={this.togglePlayback}>Play/Pause</Button>\n              <Button onClick={this.nextBacktrackState}>Next State</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}